 #Task 02

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from google.colab import files
uploaded = files.upload()

import pandas as pd
df = pd.read_csv('Mall_Customers.csv')
df.head()



df = pd.read_csv('Mall_Customers.csv')
print("Data Shape:", df.shape)
print(df.head())


df.columns = ['CustomerID', 'Gender', 'Age', 'AnnualIncome', 'SpendingScore']


df['Gender'] = df['Gender'].map({'Male': 0, 'Female': 1})


features = ['Gender', 'Age', 'AnnualIncome', 'SpendingScore']
X = df[features]

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
    kmeans.fit(X_scaled)
    wcss.append(kmeans.inertia_)

plt.figure(figsize=(8, 4))
plt.plot(range(1, 11), wcss, marker='o')
plt.title('Elbow Method for Optimal k')
plt.xlabel('Number of clusters (k)')
plt.ylabel('WCSS')
plt.grid(True)
plt.show()


optimal_k = 5
kmeans = KMeans(n_clusters=optimal_k, init='k-means++', random_state=42)
df['Cluster'] = kmeans.fit_predict(X_scaled)


pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)


plt.figure(figsize=(8, 6))
sns.scatterplot(x=X_pca[:, 0], y=X_pca[:, 1], hue=df['Cluster'], palette='Set2', s=100)
plt.title('Customer Segments via K-Means + PCA')
plt.xlabel('PCA Component 1')
plt.ylabel('PCA Component 2')
plt.legend(title='Cluster')
plt.grid(True)
plt.show()


cluster_profiles = df.groupby('Cluster')[features].mean()
print("\nCluster Profiles:")
print(cluster_profiles)
